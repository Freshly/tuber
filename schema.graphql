directive @goField(
  forceResolver: Boolean
  name: String
) on INPUT_FIELD_DEFINITION | FIELD_DEFINITION

type Tuple {
  key: String!
  value: String!
}

type Build {
  status: String!
  link: String!
  startTime: String!
}

type TuberApp {
  createdAt: String!
  updatedAt: String!
  cloudSourceRepo: String!
  currentTags: [String!]
  githubRepo: String!
  imageTag: String!
  name: ID!
  paused: Boolean!
  reviewApp: Boolean!
  reviewAppsConfig: ReviewAppsConfig
  slackChannel: String!
  sourceAppName: String!
  state: State!
  triggerID: String!
  vars: [Tuple!]!
  reviewApps: [TuberApp!] @goField(forceResolver: true)
  excludedResources: [Resource!]!
  cloudBuildStatuses: [Build!]! @goField(forceResolver: true)
}

input AppInput {
  name: ID!
  isIstio: Boolean
  imageTag: String
  paused: Boolean
  githubRepo: String
  slackChannel: String
  cloudSourceRepo: String
}

type State {
  Current: [Resource!]!
  Previous: [Resource!]!
}

type Resource {
  encoded: String!
  kind: String!
  name: String!
}

type ReviewAppsConfig {
  enabled: Boolean!
  vars: [Tuple!]!
  excludedResources: [Resource!]!
}

input CreateReviewAppInput {
  name: String!
  branchName: String!
}

input SetTupleInput {
  name: ID!
  key: String!
  value: String!
}

input SetResourceInput {
  appName: ID!
  name: String!
  kind: String!
}

input ManualApplyInput {
  name: ID!
  resources: [String]!
}

type ClusterInfo {
  name: String!
  region: String!
  reviewAppsEnabled: Boolean!
}

input SetRacEnabledInput {
  name: ID!
  enabled: Boolean!
}

type Query {
  getAppEnv(name: String!): [Tuple!]!
  getApp(name: String!): TuberApp
  getApps: [TuberApp!]!
  getAllReviewApps: [TuberApp!]!
  getClusterInfo: ClusterInfo!
}

type Mutation {
  createApp(input: AppInput!): TuberApp
  updateApp(input: AppInput!): TuberApp
  removeApp(input: AppInput!): TuberApp
  deploy(input: AppInput!): TuberApp
  destroyApp(input: AppInput!): TuberApp
  createReviewApp(input: CreateReviewAppInput!): TuberApp
  setAppVar(input: SetTupleInput!): TuberApp
  unsetAppVar(input: SetTupleInput!): TuberApp
  setAppEnv(input: SetTupleInput!): TuberApp
  unsetAppEnv(input: SetTupleInput!): TuberApp
  setExcludedResource(input: SetResourceInput!): TuberApp
  unsetExcludedResource(input: SetResourceInput!): TuberApp
  rollback(input: AppInput!): TuberApp
  setGithubRepo(input: AppInput!): TuberApp
  setCloudSourceRepo(input: AppInput!): TuberApp
  setSlackChannel(input: AppInput!): TuberApp
  manualApply(input: ManualApplyInput!): TuberApp
  setRacEnabled(input: SetRacEnabledInput!): TuberApp
  setRacVar(input: SetTupleInput!): TuberApp
  unsetRacVar(input: SetTupleInput!): TuberApp
  setRacExclusion(input: SetResourceInput!): TuberApp
  unsetRacExclusion(input: SetResourceInput!): TuberApp
  saveAllApps: Boolean
}

schema {
  query: Query
  mutation: Mutation
}
